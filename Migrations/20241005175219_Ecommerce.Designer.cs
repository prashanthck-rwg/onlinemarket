// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShoping.Data;

#nullable disable

namespace OnlineShoping.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241005175219_Ecommerce")]
    partial class Ecommerce
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShoping.Models.Cart", b =>
                {
                    b.Property<int>("crt_int_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("crt_int_Id"));

                    b.Property<DateTime>("crt_create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("crt_create_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("crt_int_prod_id")
                        .HasColumnType("int");

                    b.Property<int>("crt_int_quanty")
                        .HasColumnType("int");

                    b.Property<int>("crt_int_usrid")
                        .HasColumnType("int");

                    b.Property<decimal>("crt_total")
                        .HasColumnType("money");

                    b.HasKey("crt_int_Id");

                    b.HasIndex("crt_int_prod_id");

                    b.HasIndex("crt_int_usrid");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("OnlineShoping.Models.Discount", b =>
                {
                    b.Property<int>("disc_int_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("disc_int_id"));

                    b.Property<DateTime>("disc_created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("disc_created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<decimal>("disc_mny_price")
                        .HasColumnType("money");

                    b.Property<string>("disc_str_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("disc_int_id");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("OnlineShoping.Models.Orderdetail", b =>
                {
                    b.Property<int>("ordetail_int_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ordetail_int_id"));

                    b.Property<DateTime>("ordetail_created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ordetail_created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("ordetail_int_pmdid")
                        .HasColumnType("int");

                    b.Property<decimal>("ordetail_int_total")
                        .HasColumnType("money");

                    b.Property<DateTime>("ordetail_modified_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ordetail_modified_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("ordetail_user_id")
                        .HasColumnType("int");

                    b.HasKey("ordetail_int_id");

                    b.HasIndex("ordetail_int_pmdid");

                    b.HasIndex("ordetail_user_id");

                    b.ToTable("Orderdetails");
                });

            modelBuilder.Entity("OnlineShoping.Models.Orderitem", b =>
                {
                    b.Property<int>("ord_int_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ord_int_id"));

                    b.Property<DateTime>("ord_created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ord_created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("ord_int_orderdetailid")
                        .HasColumnType("int");

                    b.Property<DateTime>("ord_modified_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("ord_modified_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("ord_product_id")
                        .HasColumnType("int");

                    b.HasKey("ord_int_id");

                    b.HasIndex("ord_int_orderdetailid");

                    b.HasIndex("ord_product_id");

                    b.ToTable("Orderitems");
                });

            modelBuilder.Entity("OnlineShoping.Models.Paymentdetail", b =>
                {
                    b.Property<int>("pmd_int_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("pmd_int_id"));

                    b.Property<DateTime>("pmd_created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("pmd_created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("pmd_int_orderid")
                        .HasColumnType("int");

                    b.Property<decimal>("pmd_mny_amount")
                        .HasColumnType("money");

                    b.Property<DateTime>("pmd_modified_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("pmd_modified_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("pmd_str_status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pmd_int_id");

                    b.HasIndex("pmd_int_orderid");

                    b.ToTable("Paymentdetails");
                });

            modelBuilder.Entity("OnlineShoping.Models.Product", b =>
                {
                    b.Property<int>("Prod_int_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Prod_int_ID"));

                    b.Property<DateTime>("Prod_Created_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Prod_Created_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("Prod_Modified_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Prod_Modified_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("Prod_int_DiscId")
                        .HasColumnType("int");

                    b.Property<decimal>("Prod_mny_Price")
                        .HasColumnType("money");

                    b.Property<string>("Prod_str_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Prod_int_ID");

                    b.HasIndex("Prod_int_DiscId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("OnlineShoping.Models.User", b =>
                {
                    b.Property<int>("usr_int_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usr_int_id"));

                    b.Property<DateTime>("usr_create_at")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("usr_create_at")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("usr_password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usr_phnumber_id")
                        .HasColumnType("int");

                    b.Property<string>("usr_str_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usr_str_pwd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usr_username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usr_int_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OnlineShoping.Models.Cart", b =>
                {
                    b.HasOne("OnlineShoping.Models.Product", "Prod_int_ID")
                        .WithMany("Carts")
                        .HasForeignKey("crt_int_prod_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShoping.Models.User", "usr_int_id")
                        .WithMany("Carts")
                        .HasForeignKey("crt_int_usrid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prod_int_ID");

                    b.Navigation("usr_int_id");
                });

            modelBuilder.Entity("OnlineShoping.Models.Orderdetail", b =>
                {
                    b.HasOne("OnlineShoping.Models.Paymentdetail", "pmd_int_id")
                        .WithMany("Orderdetails")
                        .HasForeignKey("ordetail_int_pmdid")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OnlineShoping.Models.User", "usr_int_id")
                        .WithMany("Orderdetails")
                        .HasForeignKey("ordetail_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pmd_int_id");

                    b.Navigation("usr_int_id");
                });

            modelBuilder.Entity("OnlineShoping.Models.Orderitem", b =>
                {
                    b.HasOne("OnlineShoping.Models.Orderdetail", "ordetail_int_id")
                        .WithMany("Orderitems")
                        .HasForeignKey("ord_int_orderdetailid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShoping.Models.Product", "Prod_int_ID")
                        .WithMany("Orderitems")
                        .HasForeignKey("ord_product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prod_int_ID");

                    b.Navigation("ordetail_int_id");
                });

            modelBuilder.Entity("OnlineShoping.Models.Paymentdetail", b =>
                {
                    b.HasOne("OnlineShoping.Models.Orderdetail", "ordetail_int_id")
                        .WithMany("Paymentdetails")
                        .HasForeignKey("pmd_int_orderid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ordetail_int_id");
                });

            modelBuilder.Entity("OnlineShoping.Models.Product", b =>
                {
                    b.HasOne("OnlineShoping.Models.Discount", "disc_int_id")
                        .WithMany("Products")
                        .HasForeignKey("Prod_int_DiscId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disc_int_id");
                });

            modelBuilder.Entity("OnlineShoping.Models.Discount", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("OnlineShoping.Models.Orderdetail", b =>
                {
                    b.Navigation("Orderitems");

                    b.Navigation("Paymentdetails");
                });

            modelBuilder.Entity("OnlineShoping.Models.Paymentdetail", b =>
                {
                    b.Navigation("Orderdetails");
                });

            modelBuilder.Entity("OnlineShoping.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orderitems");
                });

            modelBuilder.Entity("OnlineShoping.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orderdetails");
                });
#pragma warning restore 612, 618
        }
    }
}
